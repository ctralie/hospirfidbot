driver
(
	name "rfiddriver"
	plugin "RFIDdriver.so"
	provides ["rfid:0"]
	port "/dev/robot/rfidreader"
	debug 0
	printlive 0
	logfile "logs/rfidtags.log"
	alwayson 1
)


driver (
	name "urglaser"
	provides ["laser:1"]
	port "/dev/robot/laser"
)

driver (
	name "roomba"
	provides ["position2d:0"]
	port "/dev/robot/roomba"
	safe 1
)

# This is used to convert the urglaser format to the sicklaser
# format (default) which I suspect works better with pmaptest
# But I have to be careful to keep the rescanned laser data on 
# robot 0 so pmaptest doesn't get confused (the laser and odometry
# data need to be on the same robot)
driver (
	name "laserrescan"
	requires ["laser:1"]
	provides ["laser:0"]
)

#driver (
#	name "camerauvc"
#	provides ["camera:0"]
#	port "/dev/video1"
#	size [640 480]
#)

#driver (
#	name "cameracompress"
#	provides ["camera:1"]
#	requires ["camera:0"]
#)


#driver (
#	name "mapfile"
#	provides ["map:0"]
#	filename "logs/fine.pgm"
#	resolution 0.05
#)

#driver (
#	name "amcl"
#	provides ["localize:0" "position2d:1"]
#	requires ["odometry:::position2d:0" "laser:0" "laser:::map:0"]
#	enable_gui 1
#)


#Log laser and odometry data
driver (
	name "writelog"
	filename "rawdata.log"
	log_directory "logs"
	requires ["laser:0" "position2d:0"]
	provides ["log:0"]
	alwayson 1
	autorecord 1
)

#Log images separately (this can be huge)
#driver (
#	name "writelog"
#	filename "camera.log"
#	log_directory "logs"
#	requires ["camera:1"]
#	provides ["log:1"]
	#alwayson 1
	#camera_log_images 0
	#camera_save_images 1
#)
